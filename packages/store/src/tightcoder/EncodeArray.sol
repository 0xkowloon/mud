// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { TightCoder } from "./TightCoder.sol";

library EncodeArray {
  /************************************************************************
   *
   *    uint8 - uint256
   *
   ************************************************************************/
  function encode(uint8[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, false);
  }

  function encode(uint16[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, false);
  }

  function encode(uint24[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, false);
  }

  function encode(uint32[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, false);
  }

  function encode(uint40[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, false);
  }

  function encode(uint48[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, false);
  }

  function encode(uint56[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, false);
  }

  function encode(uint64[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, false);
  }

  function encode(uint72[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, false);
  }

  function encode(uint80[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, false);
  }

  function encode(uint88[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, false);
  }

  function encode(uint96[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, false);
  }

  function encode(uint104[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, false);
  }

  function encode(uint112[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, false);
  }

  function encode(uint120[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, false);
  }

  function encode(uint128[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, false);
  }

  function encode(uint136[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, false);
  }

  function encode(uint144[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, false);
  }

  function encode(uint152[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, false);
  }

  function encode(uint160[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, false);
  }

  function encode(uint168[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, false);
  }

  function encode(uint176[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, false);
  }

  function encode(uint184[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, false);
  }

  function encode(uint192[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, false);
  }

  function encode(uint200[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, false);
  }

  function encode(uint208[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, false);
  }

  function encode(uint216[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, false);
  }

  function encode(uint224[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, false);
  }

  function encode(uint232[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, false);
  }

  function encode(uint240[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, false);
  }

  function encode(uint248[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, false);
  }

  function encode(uint256[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, false);
  }

  /************************************************************************
   *
   *    int8 - int256
   *
   ************************************************************************/
  function encode(int8[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, false);
  }

  function encode(int16[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, false);
  }

  function encode(int24[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, false);
  }

  function encode(int32[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, false);
  }

  function encode(int40[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, false);
  }

  function encode(int48[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, false);
  }

  function encode(int56[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, false);
  }

  function encode(int64[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, false);
  }

  function encode(int72[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, false);
  }

  function encode(int80[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, false);
  }

  function encode(int88[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, false);
  }

  function encode(int96[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, false);
  }

  function encode(int104[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, false);
  }

  function encode(int112[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, false);
  }

  function encode(int120[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, false);
  }

  function encode(int128[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, false);
  }

  function encode(int136[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, false);
  }

  function encode(int144[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, false);
  }

  function encode(int152[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, false);
  }

  function encode(int160[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, false);
  }

  function encode(int168[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, false);
  }

  function encode(int176[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, false);
  }

  function encode(int184[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, false);
  }

  function encode(int192[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, false);
  }

  function encode(int200[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, false);
  }

  function encode(int208[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, false);
  }

  function encode(int216[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, false);
  }

  function encode(int224[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, false);
  }

  function encode(int232[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, false);
  }

  function encode(int240[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, false);
  }

  function encode(int248[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, false);
  }

  function encode(int256[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, false);
  }

  /************************************************************************
   *
   *    bytes1 - bytes32
   *
   ************************************************************************/
  function encode(bytes1[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, true);
  }

  function encode(bytes2[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, true);
  }

  function encode(bytes3[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, true);
  }

  function encode(bytes4[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, true);
  }

  function encode(bytes5[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, true);
  }

  function encode(bytes6[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, true);
  }

  function encode(bytes7[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, true);
  }

  function encode(bytes8[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, true);
  }

  function encode(bytes9[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, true);
  }

  function encode(bytes10[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, true);
  }

  function encode(bytes11[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, true);
  }

  function encode(bytes12[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, true);
  }

  function encode(bytes13[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, true);
  }

  function encode(bytes14[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, true);
  }

  function encode(bytes15[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, true);
  }

  function encode(bytes16[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, true);
  }

  function encode(bytes17[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, true);
  }

  function encode(bytes18[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, true);
  }

  function encode(bytes19[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, true);
  }

  function encode(bytes20[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, true);
  }

  function encode(bytes21[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, true);
  }

  function encode(bytes22[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, true);
  }

  function encode(bytes23[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, true);
  }

  function encode(bytes24[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, true);
  }

  function encode(bytes25[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, true);
  }

  function encode(bytes26[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, true);
  }

  function encode(bytes27[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, true);
  }

  function encode(bytes28[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, true);
  }

  function encode(bytes29[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, true);
  }

  function encode(bytes30[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, true);
  }

  function encode(bytes31[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, true);
  }

  function encode(bytes32[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, true);
  }

  /************************************************************************
   *
   *    Other types
   *
   ************************************************************************/

  // Note: internally address is right-aligned, like uint160
  function encode(address[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, false);
  }

  function encode(bool[] memory _input) internal pure returns (bytes memory _output) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, false);
  }
}
