/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    NamespaceOwner: (() => {
      const keySchema = { namespace: "bytes16" } as const;
      const valueSchema = { owner: "address" } as const;
      return defineComponent(
        world,
        {
          owner: RecsType.String,
        },
        {
          id: "0x000000000000000000000000000000004e616d6573706163654f776e65720000",
          metadata: {
            tableName: ":NamespaceOwner",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    ResourceAccess: (() => {
      const keySchema = {
        resourceSelector: "bytes32",
        caller: "address",
      } as const;
      const valueSchema = { access: "bool" } as const;
      return defineComponent(
        world,
        {
          access: RecsType.Boolean,
        },
        {
          id: "0x000000000000000000000000000000005265736f757263654163636573730000",
          metadata: {
            tableName: ":ResourceAccess",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    InstalledModules: (() => {
      const keySchema = {
        moduleName: "bytes16",
        argumentsHash: "bytes32",
      } as const;
      const valueSchema = { moduleAddress: "address" } as const;
      return defineComponent(
        world,
        {
          moduleAddress: RecsType.String,
        },
        {
          id: "0x00000000000000000000000000000000496e7374616c6c65644d6f64756c6573",
          metadata: {
            tableName: ":InstalledModules",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    Systems: (() => {
      const keySchema = { resourceSelector: "bytes32" } as const;
      const valueSchema = { system: "address", publicAccess: "bool" } as const;
      return defineComponent(
        world,
        {
          system: RecsType.String,
          publicAccess: RecsType.Boolean,
        },
        {
          id: "0x0000000000000000000000000000000053797374656d73000000000000000000",
          metadata: {
            tableName: ":Systems",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    SystemRegistry: (() => {
      const keySchema = { system: "address" } as const;
      const valueSchema = { resourceSelector: "bytes32" } as const;
      return defineComponent(
        world,
        {
          resourceSelector: RecsType.String,
        },
        {
          id: "0x0000000000000000000000000000000053797374656d52656769737472790000",
          metadata: {
            tableName: ":SystemRegistry",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    SystemHooks: (() => {
      const keySchema = { resourceSelector: "bytes32" } as const;
      const valueSchema = { value: "address[]" } as const;
      return defineComponent(
        world,
        {
          value: RecsType.StringArray,
        },
        {
          id: "0x0000000000000000000000000000000053797374656d486f6f6b730000000000",
          metadata: {
            tableName: ":SystemHooks",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    ResourceType: (() => {
      const keySchema = { resourceSelector: "bytes32" } as const;
      const valueSchema = { resourceType: "uint8" } as const;
      return defineComponent(
        world,
        {
          resourceType: RecsType.Number,
        },
        {
          id: "0x000000000000000000000000000000005265736f757263655479706500000000",
          metadata: {
            tableName: ":ResourceType",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    FunctionSelectors: (() => {
      const keySchema = { functionSelector: "bytes4" } as const;
      const valueSchema = {
        namespace: "bytes16",
        name: "bytes16",
        systemFunctionSelector: "bytes4",
      } as const;
      return defineComponent(
        world,
        {
          namespace: RecsType.String,
          name: RecsType.String,
          systemFunctionSelector: RecsType.String,
        },
        {
          id: "0x0000000000000000000000000000000046756e6374696f6e53656c6563746f72",
          metadata: {
            tableName: ":FunctionSelector",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    KeysInTable: (() => {
      const keySchema = { sourceTable: "bytes32" } as const;
      const valueSchema = {
        keys0: "bytes32[]",
        keys1: "bytes32[]",
        keys2: "bytes32[]",
        keys3: "bytes32[]",
        keys4: "bytes32[]",
      } as const;
      return defineComponent(
        world,
        {
          keys0: RecsType.StringArray,
          keys1: RecsType.StringArray,
          keys2: RecsType.StringArray,
          keys3: RecsType.StringArray,
          keys4: RecsType.StringArray,
        },
        {
          id: "0x000000000000000000000000000000004b657973496e5461626c650000000000",
          metadata: {
            tableName: ":KeysInTable",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
    UsedKeysIndex: (() => {
      const keySchema = {
        sourceTable: "bytes32",
        keysHash: "bytes32",
      } as const;
      const valueSchema = { has: "bool", index: "uint40" } as const;
      return defineComponent(
        world,
        {
          has: RecsType.Boolean,
          index: RecsType.Number,
        },
        {
          id: "0x00000000000000000000000000000000557365644b657973496e646578000000",
          metadata: {
            tableName: ":UsedKeysIndex",
            keySchema,
            valueSchema,
          },
        }
      );
    })(),
  };
}
