import { describe, it, expect } from "vitest";
import { createSqliteTable } from "./createSqliteTable";

describe("createSqliteTable", () => {
  it("should create table from schema", async () => {
    const table = createSqliteTable({
      address: "0xffffffffffffffffffffffffffffffffffffffff",
      namespace: "test",
      name: "users",
      keySchema: { x: "uint32", y: "uint32" },
      valueSchema: { name: "string", addr: "address" },
    });

    expect(table).toMatchInlineSnapshot(`
      {
        "metaColumnNames": [
          "__lastUpdatedBlockNumber",
          "__isDeleted",
        ],
        "table": SQLiteTable {
          "__isDeleted": SQLiteBoolean {
            "autoIncrement": false,
            "config": {
              "autoIncrement": false,
              "default": undefined,
              "mode": "boolean",
              "name": "__isDeleted",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "hasDefault": undefined,
            "mode": "boolean",
            "name": "__isDeleted",
            "notNull": true,
            "primary": false,
            "table": [Circular],
          },
          "__lastUpdatedBlockNumber": SQLiteBigInt {
            "config": {
              "default": undefined,
              "name": "__lastUpdatedBlockNumber",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "hasDefault": undefined,
            "name": "__lastUpdatedBlockNumber",
            "notNull": true,
            "primary": false,
            "table": [Circular],
          },
          "addr": SQLiteText {
            "config": {
              "default": undefined,
              "enumValues": [],
              "length": undefined,
              "name": "addr",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "enumValues": [],
            "hasDefault": undefined,
            "length": undefined,
            "name": "addr",
            "notNull": true,
            "primary": false,
            "table": [Circular],
          },
          "name": SQLiteText {
            "config": {
              "default": undefined,
              "enumValues": [],
              "length": undefined,
              "name": "name",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "enumValues": [],
            "hasDefault": undefined,
            "length": undefined,
            "name": "name",
            "notNull": true,
            "primary": false,
            "table": [Circular],
          },
          "x": SQLiteInteger {
            "autoIncrement": false,
            "config": {
              "autoIncrement": false,
              "default": undefined,
              "hasDefault": true,
              "name": "x",
              "notNull": true,
              "primaryKey": true,
            },
            "default": undefined,
            "hasDefault": true,
            "name": "x",
            "notNull": true,
            "primary": true,
            "table": [Circular],
          },
          "y": SQLiteInteger {
            "autoIncrement": false,
            "config": {
              "autoIncrement": false,
              "default": undefined,
              "hasDefault": true,
              "name": "y",
              "notNull": true,
              "primaryKey": true,
            },
            "default": undefined,
            "hasDefault": true,
            "name": "y",
            "notNull": true,
            "primary": true,
            "table": [Circular],
          },
          Symbol(drizzle:Name): "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
          Symbol(drizzle:OriginalName): "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
          Symbol(drizzle:Schema): undefined,
          Symbol(drizzle:Columns): {
            "__isDeleted": SQLiteBoolean {
              "autoIncrement": false,
              "config": {
                "autoIncrement": false,
                "default": undefined,
                "mode": "boolean",
                "name": "__isDeleted",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "hasDefault": undefined,
              "mode": "boolean",
              "name": "__isDeleted",
              "notNull": true,
              "primary": false,
              "table": [Circular],
            },
            "__lastUpdatedBlockNumber": SQLiteBigInt {
              "config": {
                "default": undefined,
                "name": "__lastUpdatedBlockNumber",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "hasDefault": undefined,
              "name": "__lastUpdatedBlockNumber",
              "notNull": true,
              "primary": false,
              "table": [Circular],
            },
            "addr": SQLiteText {
              "config": {
                "default": undefined,
                "enumValues": [],
                "length": undefined,
                "name": "addr",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "enumValues": [],
              "hasDefault": undefined,
              "length": undefined,
              "name": "addr",
              "notNull": true,
              "primary": false,
              "table": [Circular],
            },
            "name": SQLiteText {
              "config": {
                "default": undefined,
                "enumValues": [],
                "length": undefined,
                "name": "name",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "enumValues": [],
              "hasDefault": undefined,
              "length": undefined,
              "name": "name",
              "notNull": true,
              "primary": false,
              "table": [Circular],
            },
            "x": SQLiteInteger {
              "autoIncrement": false,
              "config": {
                "autoIncrement": false,
                "default": undefined,
                "hasDefault": true,
                "name": "x",
                "notNull": true,
                "primaryKey": true,
              },
              "default": undefined,
              "hasDefault": true,
              "name": "x",
              "notNull": true,
              "primary": true,
              "table": [Circular],
            },
            "y": SQLiteInteger {
              "autoIncrement": false,
              "config": {
                "autoIncrement": false,
                "default": undefined,
                "hasDefault": true,
                "name": "y",
                "notNull": true,
                "primaryKey": true,
              },
              "default": undefined,
              "hasDefault": true,
              "name": "y",
              "notNull": true,
              "primary": true,
              "table": [Circular],
            },
          },
          Symbol(drizzle:BaseName): "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
          Symbol(drizzle:IsAlias): false,
          Symbol(drizzle:ExtraConfigBuilder): undefined,
          Symbol(drizzle:IsDrizzleTable): true,
          Symbol(drizzle:SQLiteInlineForeignKeys): [],
        },
        "tableName": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
      }
    `);
  });

  it("can create a singleton table", async () => {
    const table = createSqliteTable({
      address: "0xffffffffffffffffffffffffffffffffffffffff",
      namespace: "test",
      name: "users",
      keySchema: {},
      valueSchema: { addrs: "address[]" },
    });

    expect(table).toMatchInlineSnapshot(`
      {
        "metaColumnNames": [
          "__lastUpdatedBlockNumber",
          "__isDeleted",
          "__singleton",
        ],
        "table": SQLiteTable {
          "__isDeleted": SQLiteBoolean {
            "autoIncrement": false,
            "config": {
              "autoIncrement": false,
              "default": undefined,
              "mode": "boolean",
              "name": "__isDeleted",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "hasDefault": undefined,
            "mode": "boolean",
            "name": "__isDeleted",
            "notNull": true,
            "primary": false,
            "table": [Circular],
          },
          "__lastUpdatedBlockNumber": SQLiteBigInt {
            "config": {
              "default": undefined,
              "name": "__lastUpdatedBlockNumber",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "hasDefault": undefined,
            "name": "__lastUpdatedBlockNumber",
            "notNull": true,
            "primary": false,
            "table": [Circular],
          },
          "__singleton": SQLiteBoolean {
            "autoIncrement": false,
            "config": {
              "autoIncrement": false,
              "default": undefined,
              "hasDefault": true,
              "mode": "boolean",
              "name": "__singleton",
              "notNull": true,
              "primaryKey": true,
            },
            "default": undefined,
            "hasDefault": true,
            "mode": "boolean",
            "name": "__singleton",
            "notNull": true,
            "primary": true,
            "table": [Circular],
          },
          "addrs": SQLiteCustomColumn {
            "config": {
              "customTypeParams": {
                "dataType": [Function],
                "fromDriver": [Function],
                "toDriver": [Function],
              },
              "default": undefined,
              "fieldConfig": undefined,
              "name": "addrs",
              "notNull": true,
              "primaryKey": false,
            },
            "default": undefined,
            "hasDefault": undefined,
            "mapFrom": [Function],
            "mapTo": [Function],
            "name": "addrs",
            "notNull": true,
            "primary": false,
            "sqlName": "text",
            "table": [Circular],
          },
          Symbol(drizzle:Name): "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
          Symbol(drizzle:OriginalName): "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
          Symbol(drizzle:Schema): undefined,
          Symbol(drizzle:Columns): {
            "__isDeleted": SQLiteBoolean {
              "autoIncrement": false,
              "config": {
                "autoIncrement": false,
                "default": undefined,
                "mode": "boolean",
                "name": "__isDeleted",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "hasDefault": undefined,
              "mode": "boolean",
              "name": "__isDeleted",
              "notNull": true,
              "primary": false,
              "table": [Circular],
            },
            "__lastUpdatedBlockNumber": SQLiteBigInt {
              "config": {
                "default": undefined,
                "name": "__lastUpdatedBlockNumber",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "hasDefault": undefined,
              "name": "__lastUpdatedBlockNumber",
              "notNull": true,
              "primary": false,
              "table": [Circular],
            },
            "__singleton": SQLiteBoolean {
              "autoIncrement": false,
              "config": {
                "autoIncrement": false,
                "default": undefined,
                "hasDefault": true,
                "mode": "boolean",
                "name": "__singleton",
                "notNull": true,
                "primaryKey": true,
              },
              "default": undefined,
              "hasDefault": true,
              "mode": "boolean",
              "name": "__singleton",
              "notNull": true,
              "primary": true,
              "table": [Circular],
            },
            "addrs": SQLiteCustomColumn {
              "config": {
                "customTypeParams": {
                  "dataType": [Function],
                  "fromDriver": [Function],
                  "toDriver": [Function],
                },
                "default": undefined,
                "fieldConfig": undefined,
                "name": "addrs",
                "notNull": true,
                "primaryKey": false,
              },
              "default": undefined,
              "hasDefault": undefined,
              "mapFrom": [Function],
              "mapTo": [Function],
              "name": "addrs",
              "notNull": true,
              "primary": false,
              "sqlName": "text",
              "table": [Circular],
            },
          },
          Symbol(drizzle:BaseName): "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
          Symbol(drizzle:IsAlias): false,
          Symbol(drizzle:ExtraConfigBuilder): undefined,
          Symbol(drizzle:IsDrizzleTable): true,
          Symbol(drizzle:SQLiteInlineForeignKeys): [],
        },
        "tableName": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF__test__users",
      }
    `);
  });
});
